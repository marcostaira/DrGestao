
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.TenantScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  plano: 'plano',
  ativo: 'ativo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UsuarioScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  nome: 'nome',
  email: 'email',
  senha: 'senha',
  tipo: 'tipo',
  ativo: 'ativo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProfissionalScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  nome: 'nome',
  especialidade: 'especialidade',
  observacoes: 'observacoes',
  ativo: 'ativo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PacienteScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  profissionalId: 'profissionalId',
  nome: 'nome',
  telefone: 'telefone',
  email: 'email',
  observacoes: 'observacoes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProcedimentoScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  nome: 'nome',
  valor: 'valor',
  duracaoMinutos: 'duracaoMinutos',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AgendamentoScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  pacienteId: 'pacienteId',
  profissionalId: 'profissionalId',
  procedimentoId: 'procedimentoId',
  dataHora: 'dataHora',
  dataHoraFim: 'dataHoraFim',
  status: 'status',
  observacoes: 'observacoes',
  confirmacaoEnviada: 'confirmacaoEnviada',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AtendimentoScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  agendamentoId: 'agendamentoId',
  pacienteId: 'pacienteId',
  profissionalId: 'profissionalId',
  procedimentoId: 'procedimentoId',
  anotacoes: 'anotacoes',
  procedimentosRealizados: 'procedimentosRealizados',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WhatsAppConfigScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  templateConfirmacao: 'templateConfirmacao',
  templateSim: 'templateSim',
  templateNao: 'templateNao',
  templateOpcoesInvalidas: 'templateOpcoesInvalidas',
  horasAntecedencia: 'horasAntecedencia',
  ativo: 'ativo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LogSistemaScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  usuarioId: 'usuarioId',
  tipo: 'tipo',
  descricao: 'descricao',
  metadata: 'metadata',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.TipoUsuario = exports.$Enums.TipoUsuario = {
  ADMIN: 'ADMIN',
  SECRETARIA: 'SECRETARIA'
};

exports.StatusAgendamento = exports.$Enums.StatusAgendamento = {
  MARCADO: 'MARCADO',
  CONFIRMADO: 'CONFIRMADO',
  COMPARECEU: 'COMPARECEU',
  FALTOU: 'FALTOU',
  CANCELADO: 'CANCELADO'
};

exports.TipoLog = exports.$Enums.TipoLog = {
  LOGIN: 'LOGIN',
  LOGOUT: 'LOGOUT',
  AGENDAMENTO_CRIADO: 'AGENDAMENTO_CRIADO',
  AGENDAMENTO_ATUALIZADO: 'AGENDAMENTO_ATUALIZADO',
  AGENDAMENTO_CANCELADO: 'AGENDAMENTO_CANCELADO',
  CONFIRMACAO_ENVIADA: 'CONFIRMACAO_ENVIADA',
  CONFIRMACAO_RECEBIDA: 'CONFIRMACAO_RECEBIDA',
  SYNC_GOOGLE_CALENDAR: 'SYNC_GOOGLE_CALENDAR',
  ERROR: 'ERROR',
  CREATE: 'CREATE',
  UPDATE: 'UPDATE',
  DELETE: 'DELETE'
};

exports.Prisma.ModelName = {
  Tenant: 'Tenant',
  Usuario: 'Usuario',
  Profissional: 'Profissional',
  Paciente: 'Paciente',
  Procedimento: 'Procedimento',
  Agendamento: 'Agendamento',
  Atendimento: 'Atendimento',
  WhatsAppConfig: 'WhatsAppConfig',
  LogSistema: 'LogSistema'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/marcostaira/DEV/Code/DrGv2/backend/src/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/marcostaira/DEV/Code/DrGv2/backend/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// ============================================================================\n// TENANT MANAGEMENT\n// ============================================================================\n\nmodel Tenant {\n  id        String   @id @default(cuid())\n  nome      String\n  plano     String   @default(\"basico\")\n  ativo     Boolean  @default(true)\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  // Relacionamentos\n  usuarios       Usuario[]\n  pacientes      Paciente[]\n  profissionais  Profissional[]\n  procedimentos  Procedimento[]\n  agendamentos   Agendamento[]\n  atendimentos   Atendimento[]\n  whatsappConfig WhatsAppConfig?\n\n  @@map(\"tenants\")\n}\n\n// ============================================================================\n// USER MANAGEMENT\n// ============================================================================\n\nenum TipoUsuario {\n  ADMIN\n  SECRETARIA\n}\n\nmodel Usuario {\n  id       String      @id @default(cuid())\n  tenantId String      @map(\"tenant_id\")\n  nome     String\n  email    String\n  senha    String\n  tipo     TipoUsuario @default(SECRETARIA)\n  ativo    Boolean     @default(true)\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  // Relacionamentos\n  tenant Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n\n  @@unique([tenantId, email])\n  @@index([tenantId, email])\n  @@map(\"usuarios\")\n}\n\n// ============================================================================\n// PROFISSIONAIS\n// ============================================================================\n\nmodel Profissional {\n  id            String  @id @default(cuid())\n  tenantId      String  @map(\"tenant_id\")\n  nome          String\n  especialidade String?\n  observacoes   String?\n  ativo         Boolean @default(true)\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  // Relacionamentos\n  tenant       Tenant        @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n  pacientes    Paciente[]\n  agendamentos Agendamento[]\n  atendimentos Atendimento[]\n\n  @@index([tenantId, ativo])\n  @@map(\"profissionais\")\n}\n\n// ============================================================================\n// PACIENTES\n// ============================================================================\n\nmodel Paciente {\n  id             String  @id @default(cuid())\n  tenantId       String  @map(\"tenant_id\")\n  profissionalId String? @map(\"profissional_id\")\n  nome           String\n  telefone       String\n  email          String?\n  observacoes    String?\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  // Relacionamentos\n  tenant       Tenant        @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n  profissional Profissional? @relation(fields: [profissionalId], references: [id], onDelete: SetNull)\n  agendamentos Agendamento[]\n  atendimentos Atendimento[]\n\n  @@index([tenantId, nome])\n  @@index([tenantId, telefone])\n  @@map(\"pacientes\")\n}\n\n// ============================================================================\n// PROCEDIMENTOS\n// ============================================================================\n\nmodel Procedimento {\n  id             String   @id @default(cuid())\n  tenantId       String   @map(\"tenant_id\")\n  nome           String\n  valor          Decimal? @db.Decimal(10, 2)\n  duracaoMinutos Int      @map(\"duracao_minutos\")\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  // Relacionamentos\n  tenant       Tenant        @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n  agendamentos Agendamento[]\n  atendimentos Atendimento[]\n\n  @@index([tenantId, nome])\n  @@map(\"procedimentos\")\n}\n\n// ============================================================================\n// AGENDAMENTOS\n// ============================================================================\n\nenum StatusAgendamento {\n  MARCADO // 🟡 Amarelo\n  CONFIRMADO // 🟢 Verde\n  COMPARECEU // 🔵 Azul\n  FALTOU // 🔴 Vermelho\n  CANCELADO // ⚫ Cinza\n}\n\nmodel Agendamento {\n  id                 String            @id @default(cuid())\n  tenantId           String            @map(\"tenant_id\")\n  pacienteId         String?           @map(\"paciente_id\")\n  profissionalId     String            @map(\"profissional_id\")\n  procedimentoId     String            @map(\"procedimento_id\")\n  dataHora           DateTime          @map(\"data_hora\")\n  dataHoraFim        DateTime          @map(\"data_hora_fim\") // ADICIONE ESTA LINHA\n  status             StatusAgendamento @default(MARCADO)\n  observacoes        String?\n  confirmacaoEnviada Boolean           @default(false) @map(\"confirmacao_enviada\")\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  // Relacionamentos\n  tenant       Tenant       @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n  paciente     Paciente?    @relation(fields: [pacienteId], references: [id], onDelete: SetNull)\n  profissional Profissional @relation(fields: [profissionalId], references: [id], onDelete: Cascade)\n  procedimento Procedimento @relation(fields: [procedimentoId], references: [id], onDelete: Cascade)\n  atendimento  Atendimento?\n\n  @@index([tenantId, dataHora])\n  @@index([tenantId, profissionalId])\n  @@index([tenantId, pacienteId])\n  @@map(\"agendamentos\")\n}\n\n// ============================================================================\n// ATENDIMENTOS\n// ============================================================================\n\nmodel Atendimento {\n  id                      String  @id @default(cuid())\n  tenantId                String  @map(\"tenant_id\")\n  agendamentoId           String  @unique @map(\"agendamento_id\")\n  pacienteId              String  @map(\"paciente_id\")\n  profissionalId          String  @map(\"profissional_id\")\n  procedimentoId          String  @map(\"procedimento_id\")\n  anotacoes               String?\n  procedimentosRealizados Json?   @map(\"procedimentos_realizados\")\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  // Relacionamentos\n  tenant       Tenant       @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n  agendamento  Agendamento  @relation(fields: [agendamentoId], references: [id], onDelete: Cascade)\n  paciente     Paciente     @relation(fields: [pacienteId], references: [id], onDelete: Cascade)\n  profissional Profissional @relation(fields: [profissionalId], references: [id], onDelete: Cascade)\n  procedimento Procedimento @relation(fields: [procedimentoId], references: [id], onDelete: Cascade)\n\n  @@index([tenantId, pacienteId])\n  @@index([tenantId, profissionalId])\n  @@map(\"atendimentos\")\n}\n\n// ============================================================================\n// WHATSAPP CONFIGURATION\n// ============================================================================\n\nmodel WhatsAppConfig {\n  id                      String  @id @default(cuid())\n  tenantId                String  @unique @map(\"tenant_id\")\n  templateConfirmacao     String  @default(\"Olá {nome}! Você tem consulta marcada para {data} às {hora}. Para confirmar, responda: 1=SIM ou 2=NÃO\") @map(\"template_confirmacao\")\n  templateSim             String  @default(\"Consulta confirmada! Nos vemos em {data} às {hora}.\") @map(\"template_sim\")\n  templateNao             String  @default(\"Consulta cancelada. Entre em contato para reagendar.\") @map(\"template_nao\")\n  templateOpcoesInvalidas String  @default(\"Resposta não reconhecida. Digite 1 para SIM ou 2 para NÃO.\") @map(\"template_opcoes_invalidas\")\n  horasAntecedencia       Int     @default(24) @map(\"horas_antecedencia\")\n  ativo                   Boolean @default(true)\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  // Relacionamentos\n  tenant Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n\n  @@map(\"whatsapp_config\")\n}\n\n// ============================================================================\n// LOGS E AUDITORIA\n// ============================================================================\n\nenum TipoLog {\n  LOGIN\n  LOGOUT\n  AGENDAMENTO_CRIADO\n  AGENDAMENTO_ATUALIZADO\n  AGENDAMENTO_CANCELADO\n  CONFIRMACAO_ENVIADA\n  CONFIRMACAO_RECEBIDA\n  SYNC_GOOGLE_CALENDAR\n  ERROR\n  CREATE\n  UPDATE\n  DELETE\n}\n\nmodel LogSistema {\n  id        String  @id @default(cuid())\n  tenantId  String  @map(\"tenant_id\")\n  usuarioId String? @map(\"usuario_id\")\n  tipo      TipoLog\n  descricao String\n  metadata  Json?\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  @@index([tenantId, tipo])\n  @@index([tenantId, createdAt])\n  @@map(\"logs_sistema\")\n}\n",
  "inlineSchemaHash": "553fe2057b446c007e1f6babc46b810af7d09bcad9d1569faa2e23ea6bc93abe",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Tenant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plano\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ativo\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"usuarios\",\"kind\":\"object\",\"type\":\"Usuario\",\"relationName\":\"TenantToUsuario\"},{\"name\":\"pacientes\",\"kind\":\"object\",\"type\":\"Paciente\",\"relationName\":\"PacienteToTenant\"},{\"name\":\"profissionais\",\"kind\":\"object\",\"type\":\"Profissional\",\"relationName\":\"ProfissionalToTenant\"},{\"name\":\"procedimentos\",\"kind\":\"object\",\"type\":\"Procedimento\",\"relationName\":\"ProcedimentoToTenant\"},{\"name\":\"agendamentos\",\"kind\":\"object\",\"type\":\"Agendamento\",\"relationName\":\"AgendamentoToTenant\"},{\"name\":\"atendimentos\",\"kind\":\"object\",\"type\":\"Atendimento\",\"relationName\":\"AtendimentoToTenant\"},{\"name\":\"whatsappConfig\",\"kind\":\"object\",\"type\":\"WhatsAppConfig\",\"relationName\":\"TenantToWhatsAppConfig\"}],\"dbName\":\"tenants\"},\"Usuario\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"tenant_id\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"senha\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tipo\",\"kind\":\"enum\",\"type\":\"TipoUsuario\"},{\"name\":\"ativo\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"TenantToUsuario\"}],\"dbName\":\"usuarios\"},\"Profissional\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"tenant_id\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"especialidade\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"observacoes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ativo\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"ProfissionalToTenant\"},{\"name\":\"pacientes\",\"kind\":\"object\",\"type\":\"Paciente\",\"relationName\":\"PacienteToProfissional\"},{\"name\":\"agendamentos\",\"kind\":\"object\",\"type\":\"Agendamento\",\"relationName\":\"AgendamentoToProfissional\"},{\"name\":\"atendimentos\",\"kind\":\"object\",\"type\":\"Atendimento\",\"relationName\":\"AtendimentoToProfissional\"}],\"dbName\":\"profissionais\"},\"Paciente\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"tenant_id\"},{\"name\":\"profissionalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"profissional_id\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"telefone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"observacoes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"PacienteToTenant\"},{\"name\":\"profissional\",\"kind\":\"object\",\"type\":\"Profissional\",\"relationName\":\"PacienteToProfissional\"},{\"name\":\"agendamentos\",\"kind\":\"object\",\"type\":\"Agendamento\",\"relationName\":\"AgendamentoToPaciente\"},{\"name\":\"atendimentos\",\"kind\":\"object\",\"type\":\"Atendimento\",\"relationName\":\"AtendimentoToPaciente\"}],\"dbName\":\"pacientes\"},\"Procedimento\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"tenant_id\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"valor\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"duracaoMinutos\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"duracao_minutos\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"ProcedimentoToTenant\"},{\"name\":\"agendamentos\",\"kind\":\"object\",\"type\":\"Agendamento\",\"relationName\":\"AgendamentoToProcedimento\"},{\"name\":\"atendimentos\",\"kind\":\"object\",\"type\":\"Atendimento\",\"relationName\":\"AtendimentoToProcedimento\"}],\"dbName\":\"procedimentos\"},\"Agendamento\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"tenant_id\"},{\"name\":\"pacienteId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"paciente_id\"},{\"name\":\"profissionalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"profissional_id\"},{\"name\":\"procedimentoId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"procedimento_id\"},{\"name\":\"dataHora\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"data_hora\"},{\"name\":\"dataHoraFim\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"data_hora_fim\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"StatusAgendamento\"},{\"name\":\"observacoes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"confirmacaoEnviada\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"confirmacao_enviada\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"AgendamentoToTenant\"},{\"name\":\"paciente\",\"kind\":\"object\",\"type\":\"Paciente\",\"relationName\":\"AgendamentoToPaciente\"},{\"name\":\"profissional\",\"kind\":\"object\",\"type\":\"Profissional\",\"relationName\":\"AgendamentoToProfissional\"},{\"name\":\"procedimento\",\"kind\":\"object\",\"type\":\"Procedimento\",\"relationName\":\"AgendamentoToProcedimento\"},{\"name\":\"atendimento\",\"kind\":\"object\",\"type\":\"Atendimento\",\"relationName\":\"AgendamentoToAtendimento\"}],\"dbName\":\"agendamentos\"},\"Atendimento\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"tenant_id\"},{\"name\":\"agendamentoId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"agendamento_id\"},{\"name\":\"pacienteId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"paciente_id\"},{\"name\":\"profissionalId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"profissional_id\"},{\"name\":\"procedimentoId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"procedimento_id\"},{\"name\":\"anotacoes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"procedimentosRealizados\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"procedimentos_realizados\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"AtendimentoToTenant\"},{\"name\":\"agendamento\",\"kind\":\"object\",\"type\":\"Agendamento\",\"relationName\":\"AgendamentoToAtendimento\"},{\"name\":\"paciente\",\"kind\":\"object\",\"type\":\"Paciente\",\"relationName\":\"AtendimentoToPaciente\"},{\"name\":\"profissional\",\"kind\":\"object\",\"type\":\"Profissional\",\"relationName\":\"AtendimentoToProfissional\"},{\"name\":\"procedimento\",\"kind\":\"object\",\"type\":\"Procedimento\",\"relationName\":\"AtendimentoToProcedimento\"}],\"dbName\":\"atendimentos\"},\"WhatsAppConfig\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"tenant_id\"},{\"name\":\"templateConfirmacao\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"template_confirmacao\"},{\"name\":\"templateSim\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"template_sim\"},{\"name\":\"templateNao\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"template_nao\"},{\"name\":\"templateOpcoesInvalidas\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"template_opcoes_invalidas\"},{\"name\":\"horasAntecedencia\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"horas_antecedencia\"},{\"name\":\"ativo\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"TenantToWhatsAppConfig\"}],\"dbName\":\"whatsapp_config\"},\"LogSistema\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"tenant_id\"},{\"name\":\"usuarioId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"usuario_id\"},{\"name\":\"tipo\",\"kind\":\"enum\",\"type\":\"TipoLog\"},{\"name\":\"descricao\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"}],\"dbName\":\"logs_sistema\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

